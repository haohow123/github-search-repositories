{"version":3,"sources":["TableToolbar.js","util/StringProperties.js","RepositoriesTable.js","App.js","util/DistinctArray.js","reportWebVitals.js","theme.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","paddingTop","paddingLeft","paddingRight","backgroundColor","position","top","left","zIndex","title","flexGrow","select","minWidth","marginRight","TableToolbar","handleSearch","filterList","filter","handleFilter","classes","searchEl","useRef","onSearch","value","current","Toolbar","className","clsx","Typography","variant","length","FormControl","size","InputLabel","id","Select","labelId","autoWidth","labelWidth","onChange","event","target","MenuItem","map","language","htmlFor","OutlinedInput","inputRef","onKeyDown","key","endAdornment","InputAdornment","IconButton","aria-label","onClick","byString","object","string","result","splitByDot","replace","split","i","columns","text","stickyCell","RepositoriesTable","repositories","loading","rowsPerPage","page","sort","handleSort","Table","stickyHeader","TableHead","TableRow","TableCell","sortDirection","TableSortLabel","active","direction","TableBody","slice","repository","width","url","window","open","tabIndex","style","height","colSpan","Box","display","justifyContent","CircularProgress","color","align","minHeight","flexDirection","alignItems","fontSize","container","helperText","marginTop","addButton","marginLeft","fetchRepositories","query","fetch","then","res","json","App","useState","isLoading","setIsLoading","search","setSearch","total","setTotal","setPage","searchPage","setSearchPage","setRowsPerPage","setFilter","setSort","query$","useObservable","input$","pipe","encodeURIComponent","search$","switchMap","from","fetchData","useObservableState","index","self","indexOf","a","items","total_count","Container","maxWidth","Paper","TableContainer","TablePagination","component","count","onChangePage","newPage","oriMod100","newMod100","onChangeRowsPerPage","parseInt","rowsPerPageOptions","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","typography","fontFamily","join","body1","fontWeight","palette","primary","main","error","red","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.f9f176ef.chunk.js","sourcesContent":["import { useRef } from \"react\";\r\nimport Proptypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\n\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(3, \"auto\"),\r\n    paddingTop: theme.spacing(0.5),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n    backgroundColor: \"#fff\",\r\n    position: \"sticky\",\r\n    top: 0,\r\n    left: 0,\r\n    zIndex: 2,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  select: {\r\n    minWidth: 140,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction TableToolbar({ handleSearch, filterList, filter, handleFilter }) {\r\n  const classes = useStyles();\r\n  const searchEl = useRef(null);\r\n  const onSearch = () => {\r\n    const value = searchEl.current.value;\r\n    handleSearch(value);\r\n  };\r\n  const onChange = (event) => {\r\n    const value = event.target.value;\r\n    handleFilter(value);\r\n  };\r\n  return (\r\n    <Toolbar className={clsx(classes.root)}>\r\n      <Typography className={clsx(classes.title)} variant={\"subtitle1\"}>\r\n        Git Repositories\r\n      </Typography>\r\n      {!!filterList.length && (\r\n        <FormControl\r\n          variant={\"outlined\"}\r\n          className={clsx(classes.select)}\r\n          size={\"small\"}\r\n        >\r\n          <InputLabel id={\"select-language-label\"}>Language</InputLabel>\r\n          <Select\r\n            labelId={\"select-language-label\"}\r\n            id={\"select-language\"}\r\n            autoWidth\r\n            labelWidth={75}\r\n            value={filter}\r\n            onChange={onChange}\r\n          >\r\n            <MenuItem value={\"\"}>請選擇</MenuItem>\r\n            {filterList.map((language) => (\r\n              <MenuItem value={language} key={language}>\r\n                {language}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      )}\r\n      <FormControl variant={\"outlined\"} size={\"small\"}>\r\n        <InputLabel htmlFor={\"search\"}>搜尋名稱</InputLabel>\r\n        <OutlinedInput\r\n          id={\"search\"}\r\n          labelWidth={64}\r\n          inputRef={searchEl}\r\n          onKeyDown={(event) => event.key === \"Enter\" && onSearch()}\r\n          endAdornment={\r\n            <InputAdornment position={\"end\"}>\r\n              <IconButton aria-label={\"search\"} onClick={onSearch}>\r\n                <SearchIcon />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n        />\r\n      </FormControl>\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nTableToolbar.propTypes = {\r\n  handleSearch: Proptypes.func.isRequired,\r\n  handleFilter: Proptypes.func,\r\n  filterList: Proptypes.array,\r\n  filter: Proptypes.string,\r\n};\r\n\r\nexport default TableToolbar;\r\n","export default function byString(object, string) {\r\n  let result = object;\r\n  //convert indexes to properties\r\n  const formattedString = string.replace(\"/[(w+)]/g\", \".$1\");\r\n  const splitByDot = formattedString.split(\".\");\r\n  for (let i = 0; i < splitByDot.length; i++) {\r\n    if (splitByDot[i] in result) {\r\n      result = result[splitByDot[i]];\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n","import clsx from \"clsx\";\r\nimport Proptypes from \"prop-types\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport byString from \"./util/StringProperties\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nconst columns = [\r\n  { key: \"name\", text: \"Name\" },\r\n  { key: \"language\", text: \"Language\" },\r\n  { key: \"owner.login\", text: \"Owner\" },\r\n  { key: \"watchers_count\", text: \"Watchers\" },\r\n  { key: \"forks_count\", text: \"Forks\" },\r\n  { key: \"stargazers_count\", text: \"Stars\" },\r\n  { key: \"actions\", text: \"\" },\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  stickyCell: {\r\n    top: 64,\r\n  },\r\n});\r\n\r\nfunction RepositoriesTable({\r\n  repositories,\r\n  loading,\r\n  rowsPerPage,\r\n  page,\r\n  sort,\r\n  handleSort,\r\n}) {\r\n  const classes = useStyles();\r\n  const onClick = () => {\r\n    if (sort === \"desc\") {\r\n      handleSort(\"asc\");\r\n    } else {\r\n      handleSort(\"desc\");\r\n    }\r\n  };\r\n  const forwardGithub = (url) => {\r\n    window.open(url, \"_blank\");\r\n  };\r\n  return (\r\n    <Table stickyHeader>\r\n      <TableHead>\r\n        <TableRow>\r\n          {columns.map(({ key, text }) => (\r\n            <TableCell\r\n              key={key}\r\n              classes={{ stickyHeader: clsx(classes.stickyCell) }}\r\n              sortDirection={sort}\r\n            >\r\n              {key !== \"stargazers_count\" ? (\r\n                text\r\n              ) : (\r\n                <TableSortLabel active direction={sort} onClick={onClick}>\r\n                  {text}\r\n                </TableSortLabel>\r\n              )}\r\n            </TableCell>\r\n          ))}\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {repositories.length && !loading ? (\r\n          repositories\r\n            .slice(\r\n              (page % (100 / rowsPerPage)) * rowsPerPage,\r\n              ((page % (100 / rowsPerPage)) + 1) * rowsPerPage\r\n            )\r\n            .map((repository) => (\r\n              <TableRow key={repository.id}>\r\n                {columns.map(({ key }) =>\r\n                  key !== \"actions\" ? (\r\n                    <TableCell key={key}>{byString(repository, key)}</TableCell>\r\n                  ) : (\r\n                    <TableCell key={key} width={100}>\r\n                      <IconButton\r\n                        aria-label={\"go to repository\"}\r\n                        onClick={() => forwardGithub(repository[\"html_url\"])}\r\n                      >\r\n                        <ArrowForwardIcon />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  )\r\n                )}\r\n              </TableRow>\r\n            ))\r\n        ) : (\r\n          <TableRow tabIndex={-1} style={{ height: 10 * 53 }}>\r\n            <TableCell colSpan={columns.length}>\r\n              {loading ? (\r\n                <Box display={\"flex\"} justifyContent={\"center\"}>\r\n                  <CircularProgress />\r\n                </Box>\r\n              ) : (\r\n                <Typography color={\"secondary\"} align={\"center\"}>\r\n                  查無資料\r\n                </Typography>\r\n              )}\r\n            </TableCell>\r\n          </TableRow>\r\n        )}\r\n      </TableBody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nRepositoriesTable.propTypes = {\r\n  loading: Proptypes.bool,\r\n  repositories: Proptypes.array,\r\n  rowsPerPage: Proptypes.number,\r\n  page: Proptypes.number,\r\n  handleSort: Proptypes.func,\r\n  sort: Proptypes.string,\r\n};\r\n\r\nexport default RepositoriesTable;\r\n","import { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport distinctArray from \"./util/DistinctArray\";\r\n\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\n\r\nimport TableToolbar from \"./TableToolbar\";\r\nimport { useObservable, useObservableState } from \"observable-hooks\";\r\nimport { from } from \"rxjs\";\r\nimport { map, switchMap } from \"rxjs/operators\";\r\n\r\nimport RepositoriesTable from \"./RepositoriesTable\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"#e5e5e5\",\r\n    minHeight: \"100vh\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    fontSize: \"calc(10px + 2vmin)\",\r\n  },\r\n  container: {\r\n    height: 590 + 64 + 24 + 24,\r\n  },\r\n  helperText: {\r\n    position: \"absolute\",\r\n    marginTop: theme.spacing(-2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  addButton: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst fetchRepositories = (query) => {\r\n  return fetch(`https://api.github.com/search/repositories?${query}`).then(\r\n    (res) => res.json()\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [total, setTotal] = useState(0);\r\n  const [page, setPage] = useState(0);\r\n  const [searchPage, setSearchPage] = useState(1);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [sort, setSort] = useState(\"desc\");\r\n\r\n  const query$ = useObservable(\r\n    (input$) =>\r\n      input$.pipe(\r\n        map(([search, rowsPerPage, page, language, sort]) => {\r\n          let result = \"\";\r\n          result += `q=${encodeURIComponent(\r\n            search ? search : \"react\"\r\n          )} in:name`;\r\n          if (language) {\r\n            result += `+language:${encodeURIComponent(language)}`;\r\n          }\r\n          result += `&per_page=${100}`;\r\n          if (page) {\r\n            result += `&page=${encodeURIComponent(page)}`;\r\n          }\r\n          result += \"&sort=stars\";\r\n          result += `&order=${encodeURIComponent(sort)}`;\r\n          return result;\r\n        })\r\n      ),\r\n    [search, rowsPerPage, searchPage, filter, sort]\r\n  );\r\n  const search$ = useObservable(() =>\r\n    query$.pipe(switchMap((query) => from(fetchData(query))))\r\n  );\r\n  const repositories = useObservableState(search$, () => []);\r\n  const filterList = useObservableState(\r\n    useObservable(\r\n      (input$) =>\r\n        input$.pipe(\r\n          map(([repositories]) =>\r\n            distinctArray(repositories.map(({ language }) => language))\r\n          )\r\n        ),\r\n      [repositories]\r\n    ),\r\n    () => []\r\n  );\r\n  const fetchData = async (query) => {\r\n    setIsLoading(true);\r\n    const { items, total_count } = await fetchRepositories(query);\r\n    setIsLoading(false);\r\n    setTotal(total_count);\r\n    return items || [];\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    //if mod(100) last number to zero or zero to last number change search page\r\n    const oriMod100 = (rowsPerPage * page) % 100;\r\n    const newMod100 = (rowsPerPage * newPage) % 100;\r\n    if (\r\n      (oriMod100 === 100 - rowsPerPage && !newMod100) ||\r\n      (!oriMod100 && newMod100 === 100 - rowsPerPage) ||\r\n      (!oriMod100 && !newMod100)\r\n    ) {\r\n      setSearchPage(~~((rowsPerPage * newPage) / 100) + 1);\r\n    }\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleSearch = (value) => {\r\n    setSearch(value);\r\n    setPage(0);\r\n    setSearchPage(1);\r\n  };\r\n\r\n  const handleFilter = (value) => {\r\n    setFilter(value);\r\n  };\r\n\r\n  const handleSort = (value) => {\r\n    setSort(value);\r\n  };\r\n\r\n  return (\r\n    <div className={clsx(classes.root)}>\r\n      <Container maxWidth={\"lg\"}>\r\n        <Paper>\r\n          <TableContainer className={clsx(classes.container)}>\r\n            <TableToolbar\r\n              handleSearch={handleSearch}\r\n              filterList={filterList}\r\n              filter={filter}\r\n              handleFilter={handleFilter}\r\n            />\r\n            <RepositoriesTable\r\n              repositories={repositories}\r\n              loading={isLoading}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              sort={sort}\r\n              handleSort={handleSort}\r\n            />\r\n          </TableContainer>\r\n          {isLoading ? (\r\n            <Box height={52} />\r\n          ) : (\r\n            <TablePagination\r\n              component={\"div\"}\r\n              count={total}\r\n              onChangePage={handleChangePage}\r\n              page={page}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              rowsPerPage={rowsPerPage}\r\n              rowsPerPageOptions={[10, 25, 100]}\r\n            />\r\n          )}\r\n        </Paper>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export default function distinctArray(array) {\r\n  return array.filter(\r\n    (value, index, self) => self.indexOf(value) === index && !!value\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { red } from \"@material-ui/core/colors\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: [\"Noto Sans TC\", \"Noto Sans\"].join(\",\"),\r\n    body1: { fontWeight: 500 },\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: \"#1E9FD2\",\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: \"#fff\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport theme from \"./theme\";\r\nReactDOM.render(\r\n  <ThemeProvider theme={theme}>\r\n    <CssBaseline />\r\n    <App />\r\n  </ThemeProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}